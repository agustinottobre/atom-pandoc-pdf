@import 'ui-variables';
@import "octicon-mixins";


.pandoc-pdf-view {
  position: absolute;
  font-family: @font-family;
  font-size: @font-size;
  color: @text-color;
  background-color: @tool-panel-background-color;
  width: 100%;
  padding-left: @component-icon-padding;
  padding-right: @component-icon-padding;
  border-bottom: 1px solid @tool-panel-border-color;
  cursor: default;
  
  span {
    margin-top: @component-icon-padding;
    margin-bottom: @component-icon-padding;
  }
  
  .pandoc-pdf-heading {
    font-size: 1.2em;
    float: left;
    margin-top: (2 * @component-icon-padding);
    margin-right: @component-padding;
  }
  
  // fix vertical position of icons
  .icon::before {
    position: relative;
    top: ceil((16px - @font-size) / 2);
  }
  
  // create Pandoc icon
  @pandocIcon: '‚Åã';
  .icon-pandoc {
    .octicon(pandocIcon);
  }
  
  // create animatable log icon
  .icon-log {
    .octicon(three-bars);
    &.animated::before {
      animation-duration: 1s;
      animation-name: bars;
      animation-iteration-count: infinite;
      animation-timing-function: steps(4);
      // The intended 4 steps are 21%, 43%, 65%, and 87% clip from the bottom,
      // but Electron's `steps` works weirdly, so it had to be hacked to have
      // the intended effect: show 0, 1, 2, and 3 bars (from the top).
    }
  }
  @keyframes bars {
    from {
      clip-path: inset(0 0 87% 0);
    }
    to {
      clip-path: inset(0 0 -23% 0);
    }
  }
  
  
  // create icon made of four characters in a 2x2 grid
  // for YAML icon, because there wasn't anything decent
  .icon-2x2 {
    display: inline-block;
    line-height: 1;
    font-size: 8px;
  }
  
  .pandoc-pdf-close {
    color: @text-color-subtle;
    float: right;
    cursor: pointer;
  }
  .pandoc-pdf-close:hover {
    color: @text-color-highlight;
  }

  .pandoc-warning,
  .pandoc-warning.selected,
  .pandoc-warning:hover,
  .pandoc-warning.selected:hover {
    color: @text-color-warning;
  }
  .pandoc-failure,
  .pandoc-failure.selected,
  .pandoc-failure:hover,
  .pandoc-failure.selected:hover {
    color: @text-color-error;
  }

  .pandoc-pdf-dialog {
    position: absolute;
    top: 150%;
    left: ~'calc((100% - 500px) / 2)';  // center in editor
    z-index: 1;
    background-color: @tool-panel-background-color;
    padding: @component-padding;
    border: 1px solid @tool-panel-border-color;
    border-radius: @component-border-radius;
    
    .pandoc-pdf-log {
      width: (500px - 2 * @component-padding);
      max-height: 40em;
      overflow-y: scroll;
      font-family: ~`atom.config.get('editor.fontFamily')`;
      white-space: pre-wrap;
      background-color: @inset-panel-background-color;
      margin-top: @component-padding;

      // wrapped lines indented by 2 characters
      p {
        padding-left: 2ch;
        text-indent: -2ch;
        margin: 0;
        z-index: 2;
        user-select: text;
      }

      .command {
        color: @text-color-info;
        padding-bottom: 1px;
        border-bottom: 1px solid @tool-panel-background-color;
        margin-bottom: 1px;
      }
      .warning {
        color: @text-color-warning;
      }
      .error {
        color: @text-color-error;
      }
      .success {
        color: @text-color-success;
        margin-top: 1px;
        border-top: 1px solid @tool-panel-background-color;
        padding-top: 1px;
      }
      .failure {
        color: @text-color-error;
        margin-top: 1px;
        border-top: 1px solid @tool-panel-background-color;
        padding-top: 1px;
      }

      a {
        color: inherit;
        text-decoration: underline;
      }
      
      // Can't get stuff selectable...
      // cursor: text;
      // user-select: text;
      // ::selection {
      //   background-color: fade(@background-color-selected, 30%);
      // }

    }
  }
}
